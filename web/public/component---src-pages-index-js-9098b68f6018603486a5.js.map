{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/containers/layout.js","webpack:///./src/components/graphql-error-list.js","webpack:///./src/favicon.png"],"names":["HeaderGallery","styled","Layout","BrandImage","Logo","IndexPage","props","data","errors","site","posts","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","Error","showBackgroundImage","title","description","keywords","className","width","tagline","LayoutContainer","useState","showNav","setShowNav","currentHeaderImage","setCurrentHeaderImage","handleShowNav","handleHideNav","query","render","nextHeaderImage","amount","headerImages","length","prevImage","newImage","undefined","useEffect","window","headerInterval","setInterval","clearInterval","siteTitle","siteHeaderImages","onHideNav","onShowNav","GraphQLErrorList","map","error","key","message","module","exports"],"mappings":"4FAAA,oHA4IMA,EAAgBC,YAAOC,KAAV,2EAAGD,CAAH,wyBAoEbE,EAAaF,YAAOG,KAAV,wEAAGH,CAAH,+FAUDI,UAtHG,SAAAC,GAAU,IAClBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,GAAIA,EACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBA,OAAQA,KAKhC,IAAMC,GAAQF,GAAQ,IAAIE,MACPF,GAAQ,IAAIG,OAC3BC,YAAgBJ,EAAKG,OAClBE,OAAOC,KACPD,OAAOE,KAGd,IAAKL,EACH,MAAM,IAAIM,MACR,iJAIJ,OACE,kBAACf,EAAD,CAAegB,qBAAmB,GAChC,kBAAC,IAAD,CAAKC,MAAOR,EAAKQ,MAAOC,YAAaT,EAAKS,YAAaC,SAAUV,EAAKU,WAEtE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,SAEb,kBAACjB,EAAD,CAAYkB,MAAO,MACnB,4BAAKZ,EAAKQ,OACV,4BAAKR,EAAKa,c,kCCrIpB,iDAgFeC,IAjEf,SAAyBjB,GAAQ,IAAD,EACAkB,oBAAS,GAAhCC,EADuB,KACdC,EADc,OAEsBF,mBAAS,GAAtDG,EAFuB,KAEHC,EAFG,KAI9B,SAASC,IACPH,GAAW,GAEb,SAASI,IACPJ,GAAW,GAGb,OACE,kBAAC,IAAD,CACEK,MAxBK,aAyBLC,OAAQ,SAAAzB,GACN,IAAKA,EAAKE,KACR,MAAM,IAAIM,MACR,yGAIJ,IAAMkB,EAAkB,SAACC,GACvB,QADsC,IAAfA,MAAS,GAC5BA,EAAS,EACX,OAAON,EAAsBrB,EAAKE,KAAK0B,aAAaC,OAAS,GAG/DR,GAAsB,SAAAS,GACpB,IAAMC,EAAWD,EAAYH,EAC7B,YAAyCK,IAArChC,EAAKE,KAAK0B,aAAaG,GAClB,EAEAA,MAgBb,OAXAE,qBAAU,WACR,GAAKC,OAAL,CACA,IAAMC,EAAiBC,aAAY,WACjCV,EAAgB,KACf,KAEH,OAAO,WACLW,cAAcF,OAEf,IAGD,kBAAC,IAAD,iBACMpC,EADN,CAEEmB,QAASA,EACToB,UAAWtC,EAAKE,KAAKQ,MACrB6B,iBAAkBvC,EAAKE,KAAK0B,aAC5BF,gBAAiBA,EACjBN,mBAAoBA,EACpBC,sBAAuBA,EACvBmB,UAAWjB,EACXkB,UAAWnB,U,oCCxEvB,yBAWeoB,IATU,SAAC,GAAD,IAAGzC,EAAH,EAAGA,OAAH,OACvB,6BACE,6CACCA,EAAO0C,KAAI,SAAAC,GAAK,OACf,yBAAKC,IAAKD,EAAME,SAAUF,EAAME,e,qBCNtCC,EAAOC,QAAU,IAA0B","file":"component---src-pages-index-js-9098b68f6018603486a5.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport {\n  mapEdgesToNodes,\n  filterOutDocsWithoutSlugs,\n  filterOutDocsPublishedInTheFuture\n} from '../lib/helpers';\nimport icon from '../favicon.png';\n\nimport GraphQLErrorList from '../components/graphql-error-list';\nimport SEO from '../components/seo';\nimport Layout from '../containers/layout';\nimport Logo from '../components/logo';\n\nexport const query = graphql`\n  fragment SanityImageFragment on SanityImage {\n    crop {\n      _key\n      _type\n      top\n      bottom\n      left\n      right\n    }\n    hotspot {\n      _key\n      _type\n      x\n      y\n      height\n      width\n    }\n    asset {\n      _id\n    }\n  }\n  fragment SanityImage on SanityMainImage {\n    caption\n    tags\n    crop {\n      _key\n      _type\n      top\n      bottom\n      left\n      right\n    }\n    hotspot {\n      _key\n      _type\n      x\n      y\n      height\n      width\n    }\n    asset {\n      _id\n    }\n  }\n\n  fragment SanityGalleryImageFragment on SanityGalleryImage {\n    caption\n    tags\n    crop {\n      _key\n      _type\n      top\n      bottom\n      left\n      right\n    }\n    hotspot {\n      _key\n      _type\n      x\n      y\n      height\n      width\n    }\n    asset {\n      _id\n      url\n    }\n  }\n\n  query IndexPageQuery {\n    site: sanitySiteSettings(_id: { regex: \"/(drafts.|)siteSettings/\" }) {\n      title\n      description\n      keywords\n      tagline\n      headerImages {\n        ...SanityImageFragment\n      }\n    }\n  }\n`;\n\nconst IndexPage = props => {\n  const { data, errors } = props;\n\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    );\n  }\n\n  const site = (data || {}).site;\n  const postNodes = (data || {}).posts\n    ? mapEdgesToNodes(data.posts)\n        .filter(filterOutDocsWithoutSlugs)\n        .filter(filterOutDocsPublishedInTheFuture)\n    : [];\n\n  if (!site) {\n    throw new Error(\n      'Missing \"Site settings\". Open the studio at http://localhost:3333 and add some content to \"Site settings\" and restart the development server.'\n    );\n  }\n\n  return (\n    <HeaderGallery showBackgroundImage>\n      <SEO title={site.title} description={site.description} keywords={site.keywords} />\n\n      <div className=\"header-text\">\n        <div className=\"title\">\n          {/* <img src={icon} alt=\"\" className=\"brand-image\" style={{ width: 256 }} /> */}\n          <BrandImage width={256} />\n          <h1>{site.title}</h1>\n          <h2>{site.tagline}</h2>\n        </div>\n      </div>\n    </HeaderGallery>\n  );\n};\n\nconst HeaderGallery = styled(Layout)`\n  max-width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n\n  .header-text {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    color: white;\n    font-family: 'Baloo Bhai', cursive;\n\n    .title {\n      margin-top: -100px;\n    }\n\n    h1 {\n      color: #fff;\n      font-size: 5rem;\n\n      @media (max-width: 904px) {\n        font-size: 3rem;\n      }\n    }\n\n    h1,\n    h2 {\n      margin: 0;\n      padding: 0;\n      text-shadow: 0px 0px 7px #000a;\n    }\n\n    h2 {\n      font-family: 'Montserrat', sans-serif;\n      font-weight: bolder;\n      margin-top: -1rem;\n      margin-bottom: 2rem;\n    }\n  }\n  .background-image {\n    position: absolute !important;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    z-index: 0;\n    transition: opacity 1700ms ease-out;\n    &.active-image {\n      opacity: 1;\n    }\n  }\n\n  .brand-image {\n    filter: drop-shadow(0px 0px 7px #000a);\n    border-radius: 200px;\n  }\n`;\n\nconst BrandImage = styled(Logo)`\n  width: 256px;\n  margin: 0 auto;\n\n  img {\n    filter: drop-shadow(0px 0px 7px #000a);\n    border-radius: 200px;\n  }\n`;\n\nexport default IndexPage;\n","import { graphql, StaticQuery } from 'gatsby';\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../components/layout';\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site: sanitySiteSettings(_id: { regex: \"/(drafts.|)siteSettings/\" }) {\n      title\n      headerImages {\n        ...SanityImageFragment\n      }\n    }\n  }\n`;\n\nfunction LayoutContainer(props) {\n  const [showNav, setShowNav] = useState(false);\n  const [currentHeaderImage, setCurrentHeaderImage] = useState(0);\n\n  function handleShowNav() {\n    setShowNav(true);\n  }\n  function handleHideNav() {\n    setShowNav(false);\n  }\n\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        if (!data.site) {\n          throw new Error(\n            'Missing \"Site settings\". Open the Studio at http://localhost:3333 and some content in \"Site settings\"'\n          );\n        }\n\n        const nextHeaderImage = (amount = 1) => {\n          if (amount < 0) {\n            return setCurrentHeaderImage(data.site.headerImages.length - 1);\n          }\n\n          setCurrentHeaderImage(prevImage => {\n            const newImage = prevImage + amount;\n            if (data.site.headerImages[newImage] === undefined) {\n              return 0;\n            } else {\n              return newImage;\n            }\n          });\n        };\n\n        useEffect(() => {\n          if (!window) return;\n          const headerInterval = setInterval(() => {\n            nextHeaderImage(1);\n          }, 5000);\n\n          return () => {\n            clearInterval(headerInterval);\n          };\n        }, []);\n\n        return (\n          <Layout\n            {...props}\n            showNav={showNav}\n            siteTitle={data.site.title}\n            siteHeaderImages={data.site.headerImages}\n            nextHeaderImage={nextHeaderImage}\n            currentHeaderImage={currentHeaderImage}\n            setCurrentHeaderImage={setCurrentHeaderImage}\n            onHideNav={handleHideNav}\n            onShowNav={handleShowNav}\n          />\n        );\n      }}\n    />\n  );\n}\n\nexport default LayoutContainer;\n","import React from 'react'\n\nconst GraphQLErrorList = ({ errors }) => (\n  <div>\n    <h1>GraphQL Error</h1>\n    {errors.map(error => (\n      <pre key={error.message}>{error.message}</pre>\n    ))}\n  </div>\n)\n\nexport default GraphQLErrorList\n","module.exports = __webpack_public_path__ + \"static/favicon-0db56295a0af9c78b0ee985f6a899790.png\";"],"sourceRoot":""}